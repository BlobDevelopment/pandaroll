package cmd

import (
	"fmt"
	"path/filepath"
	"strings"
	"time"

	"blobdev.com/pandaroll/internal/fs"
	"blobdev.com/pandaroll/internal/logger"
	"github.com/spf13/cobra"
)

var newCmd = &cobra.Command{
	Use:   "new",
	Short: "",
	Long:  ``,
	Run: func(cmd *cobra.Command, args []string) {
		config := GetConfig()

		if len(args) == 0 {
			logger.Fatal("Description required! Usage: pandaroll new <description>")
		}

		description := strings.ToLower(strings.Join(args, "_"))
		// Go's time format is super weird...
		//	Jan 2 15:04:05 2006 MST
		//	 1  2  3  4  5    6  -7
		// Soo... "20060102150405" is 'yyyymmddhhmmss'
		version := time.Now().Format("20060102150405")

		migrationsDir := config.MigrationsDirectoryName
		migrationFile := filepath.Join(config.MigrationsDirectoryName, fmt.Sprintf("%s_%s", version, description))

		err := fs.MkdirIfNotExists(migrationsDir)
		if err != nil {
			logger.Fatalf("Failed to create migrations directory! Error: %s", err.Error())
		}

		// Up migration
		err = fs.CreateFile(
			migrationFile+".up.sql",
			fmt.Sprintf("-- Migration generated by Pandaroll (version: %s)", version),
		)
		if err != nil {
			logger.Fatalf("Failed to ceate migration file! Error: %s", err.Error())
		}

		// Down migration
		err = fs.CreateFile(
			migrationFile+".down.sql",
			fmt.Sprintf("-- Migration generated by Pandaroll (version: %s)", version),
		)
		if err != nil {
			logger.Fatalf("Failed to ceate migration file! Error: %s", err.Error())
		}

		logger.Infof("Created migration! Available here: %s", migrationFile)
	},
}

func init() {
	rootCmd.AddCommand(newCmd)
}
